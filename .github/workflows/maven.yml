# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions: write-all
    name: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Unit Tests
      run: mvn test
    - name: Show tests
      run: less target/surefire-reports/TEST-com.mycompany.app.AppTest.xml
    - name: Run SonarQube Analysis
      env: 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SNJulian_java-maven-app_AYnPVPa1wtiHddZc5NcE

  deployment_uat:
    name: Deployment UAT
    runs-on: ubuntu-latest
    needs: build
    environment: UAT
    steps:
      - name: deploy
        run: echo "deployment to UAT"

  deployment_production:
    name: Deployment Production
    runs-on: ubuntu-latest
    needs: deployment_uat
    environment: PROD
    steps:
      - name: deploy
        run: echo "deployment to PROD"
